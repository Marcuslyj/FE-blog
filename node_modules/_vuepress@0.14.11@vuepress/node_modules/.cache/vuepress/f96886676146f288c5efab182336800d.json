{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/css/position.md?vue&type=template&id=389a508e&","dependencies":[{"path":"/Users/takki/blog/docs/css/position.md","mtime":1550632269044},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"position\\\"><a href=\\\"#position\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> position</h1> <p>CSS <code>position</code>属性用于指定一个元素在文档中的定位方式。<code>top</code>，<code>right</code>，<code>bottom</code> 和 <code>left</code> 属性则决定了该元素的最终位置。</p> <h2 id=\\\"static\\\"><a href=\\\"#static\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> static</h2> <ul><li>文档流正常布局</li> <li><code>top</code>, <code>right</code>, <code>bottom</code>, <code>left</code> 和 <code>z-index</code> 属性无效。</li></ul> <h2 id=\\\"relative\\\"><a href=\\\"#relative\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> relative</h2> <ul><li>未添加定位时的位置偏移</li> <li>预留空间（未添加定位时所在位置留下空白）</li></ul> <h2 id=\\\"absolute\\\"><a href=\\\"#absolute\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> absolute</h2> <ul><li>非 <code>static</code> 定位祖先元素的偏移</li> <li>不预留空间</li> <li>脱离文档流</li></ul> <h2 id=\\\"fixed\\\"><a href=\\\"#fixed\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> fixed</h2> <ul><li>相对于<b>屏幕视口 (viewport)</b>定位</li> <li>当元素祖先的 <code>transform</code>  属性非 none 时，容器由视口改为该祖先</li> <li>当元素祖先的 <code>transform-style: preserve-3d</code>的元素，容器由视口改为该祖先</li> <li>当元素祖先的 <code>perspective</code> 值不为 none 的元素，容器由视口改为该祖先</li> <li>当元素祖先的 <code>will-change</code> 中指定了任意 CSS 属性，容器由视口改为该祖先</li></ul> <iframe width=\\\"100%\\\" height=\\\"300\\\" src=\\\"//jsfiddle.net/takkiTang/kargft7u/11/embedded/result,html,css/\\\" allowfullscreen=\\\"allowfullscreen\\\" allowpaymentrequest frameborder=\\\"0\\\"></iframe> <h2 id=\\\"sticky\\\"><a href=\\\"#sticky\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> sticky</h2> <ul><li>relative和fixed混合</li> <li>元素在跨越特定阈值前为relative，之后为fixed</li></ul> <h2 id=\\\"inherit\\\"><a href=\\\"#inherit\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> inherit</h2> <ul><li>继承</li></ul>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}