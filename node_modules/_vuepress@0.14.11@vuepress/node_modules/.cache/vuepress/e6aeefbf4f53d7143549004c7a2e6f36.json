{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/browser/浏览器渲染过程.md?vue&type=template&id=2518004d&","dependencies":[{"path":"/Users/takki/blog/docs/browser/浏览器渲染过程.md","mtime":1549960244620},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"浏览器渲染过程\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#浏览器渲染过程\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 浏览器渲染过程\")]),_vm._v(\" \"),_c('p',[_vm._v(\"浏览器的渲染机制一般分为以下几个步骤\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"处理 HTML 并构建 DOM 树。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"处理 CSS 构建 CSSOM 树。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"将 DOM 与 CSSOM 合并成一个渲染树。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"根据渲染树来布局，计算每个节点的位置。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"调用 GPU 绘制，合成图层，显示在屏幕上。\")])]),_vm._v(\" \"),_c('p',[_c('img',{attrs:{\"src\":\"/img/render.png\",\"alt\":\"'render'\"}})]),_vm._v(\" \"),_c('p',[_vm._v(\"在构建 CSSOM 树时，会阻塞渲染，直至 CSSOM 树构建完成。并且构建 CSSOM 树是一个十分消耗性能的过程，所以应该尽量保证层级扁平，减少过度层叠，越是具体的 CSS 选择器，执行速度越慢。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"当 HTML 解析到 script 标签时，会暂停构建 DOM，完成后才会从暂停的地方重新开始。也就是说，如果你想首屏渲染的越快，就越不应该在首屏就加载 JS 文件。并且 CSS 也会影响 JS 的执行，只有当解析完样式表才会执行 JS，所以也可以认为这种情况下，CSS 也会暂停构建 DOM。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"load-和-domcontentloaded-区别\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#load-和-domcontentloaded-区别\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Load 和 DOMContentLoaded 区别\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Load 事件触发代表页面中的 DOM，CSS，JS，图片已经全部加载完毕。\")]),_vm._v(\" \"),_c('p',[_vm._v(\"DOMContentLoaded 事件触发代表初始的 HTML 被完全加载和解析，不需要等待 CSS，JS，图片加载。\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"重绘（repaint）和回流（reflow）\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#重绘（repaint）和回流（reflow）\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 重绘（Repaint）和回流（Reflow）\")]),_vm._v(\" \"),_c('p',[_vm._v(\"重绘和回流是渲染步骤中的一小节，但是这两个步骤对于性能影响很大。\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"重绘是当节点需要更改外观而不会影响布局的，比如改变 color 就叫称为重绘\")]),_vm._v(\" \"),_c('li',[_vm._v(\"回流是布局或者几何属性需要改变就称为回流。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变深层次的节点很可能导致父节点的一系列回流。\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"会导致回流的操作：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"页面首次渲染\")]),_vm._v(\" \"),_c('li',[_vm._v(\"浏览器窗口大小发生改变\")]),_vm._v(\" \"),_c('li',[_vm._v(\"元素尺寸或位置发生改变\")]),_vm._v(\" \"),_c('li',[_vm._v(\"元素内容变化（文字数量或图片大小等等）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"元素字体大小变化\")]),_vm._v(\" \"),_c('li',[_vm._v(\"添加或者删除可见的 DOM 元素\")]),_vm._v(\" \"),_c('li',[_vm._v(\"激活 CSS 伪类（例如：:hover）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"查询某些属性或调用某些方法\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"减少重绘和回流\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#减少重绘和回流\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 减少重绘和回流\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"css\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#css\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" CSS\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"避免使用 table 布局。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"尽可能在 DOM 树的最末端改变 class。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"避免设置多层内联样式。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"将动画效果应用到 position 属性为 absolute 或 fixed 的元素上。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"避免使用 CSS 表达式（例如：calc()）。\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"javascript\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#javascript\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" JavaScript\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 class 并一次性更改 class 属性。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"避免频繁操作 DOM，创建一个 documentFragment，在它上面应用所有 DOM 操作，最后再把它添加到文档中。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"也可以先为元素设置 display: none，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。\")])])])}]\n\nexport { render, staticRenderFns }"]}