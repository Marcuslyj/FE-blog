{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/JavaScript/new.md?vue&type=template&id=24e6dbe9&","dependencies":[{"path":"/Users/takki/blog/docs/JavaScript/new.md","mtime":1569219399984},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"new\"><a class=\"header-anchor\" href=\"#new\" aria-hidden=\"true\">#</a> new</h1>\n<ol>\n<li>创建一个新对象。</li>\n<li>这个新对象会被执行 [[原型]] 连接。</li>\n<li>属性和方法被加入到 this 引用的对象中。并执行了构造函数中的方法.</li>\n<li>如果函数没有返回其他对象，那么 this 指向这个新对象，否则 this 指向构造函数中返回的对象。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">_new</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">constructor<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 创建一个空的对象</span>\n  <span class=\"token keyword\">let</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 链接到原型</span>\n  target<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> constructor<span class=\"token punctuation\">.</span>prototype\n  <span class=\"token comment\">// 绑定 this，执行构造函数</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 确保 new 出来的是个对象</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> result <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">?</span> result <span class=\"token punctuation\">:</span> target\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}