{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/Vue/路由.md?vue&type=template&id=95454ac8&","dependencies":[{"path":"/Users/takki/blog/docs/Vue/路由.md","mtime":1570609738752},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"路由原理\"><a class=\"header-anchor\" href=\"#路由原理\" aria-hidden=\"true\">#</a> 路由原理</h1>\n<p>前端路由实现起来其实很简单，本质就是监听 URL 的变化，然后匹配路由规则，显示相应的页面，并且无须刷新。</p>\n<ul>\n<li>hash 模式</li>\n<li>history 模式</li>\n<li>abstract 模式</li>\n</ul>\n<p>www.test.com/##/ 就是 Hash URL，当 ## 后面的哈希值发生变化时，<strong>不会向服务器请求数据</strong>，通过 <strong>hashchange</strong> 事件来监听到 URL 的变化，从而进行跳转页面。</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onhashchange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hashchange'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"/img/hash.png\" alt=\"'hash'\"></p>\n<p>History 模式是 HTML5 新推出的功能，比之 Hash URL 更加美观。 利用 <strong>history.pushState</strong> API 来完成 URL 跳转而无须重新加载页面。</p>\n<p><img src=\"/img/history.png\" alt=\"'history'\"></p>\n</div>\n",null]}