{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/JavaScript/深拷贝.md?vue&type=template&id=25914179&","dependencies":[{"path":"/Users/takki/blog/docs/JavaScript/深拷贝.md","mtime":1563952593333},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"深拷贝、浅拷贝\\\"><a href=\\\"#深拷贝、浅拷贝\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 深拷贝、浅拷贝</h1> <table><thead><tr><th></th> <th>和原数据是否指向同一对象</th> <th>第一层数据为基本数据类型</th> <th>原数据中包含子对象</th></tr></thead> <tbody><tr><td>赋值</td> <td>是</td> <td>改变会使原数据一同改变</td> <td>改变会使原数据一同改变</td></tr> <tr><td>浅拷贝</td> <td>否</td> <td>改变不会使原数据一同改变</td> <td>改变会使原数据一同改变</td></tr> <tr><td>深拷贝</td> <td>否</td> <td>改变不会使原数据一同改变</td> <td>改变不会使原数据一同改变</td></tr></tbody></table> <h2 id=\\\"浅拷贝\\\"><a href=\\\"#浅拷贝\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 浅拷贝</h2> <ul><li><code>for in</code></li> <li><code>Object.assign</code></li> <li>扩展运算符(...)</li> <li><code>Array.prototype.slice()</code></li> <li><code>Array.prototype.concat()</code></li></ul> <h2 id=\\\"深拷贝\\\"><a href=\\\"#深拷贝\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 深拷贝</h2> <p><code>JSON.parse(JSON.stringify(object))</code>的局限性</p> <ul><li>会忽略 undefined</li> <li>会忽略 symbol</li> <li>不能序列化函数</li> <li>不能解决循环引用的对象</li> <li>原型链上的属性无法拷贝</li> <li>不能正确处理 Date</li> <li>不能处理 RegExp</li></ul> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">deepClone</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">obj</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> obj <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">'object'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> obj\\n    <span class=\\\"token keyword\\\">let</span> newObj <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">obj<span class=\\\"token punctuation\\\">.</span>constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> key <span class=\\\"token keyword\\\">in</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasOwnProperty</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            newObj<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> obj<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'object'</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">deepClone</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> obj<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> newObj\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}