{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/css/flex.md?vue&type=template&id=3a8b0d70&","dependencies":[{"path":"/Users/takki/blog/docs/css/flex.md","mtime":1561017631883},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"flex\\\"><a href=\\\"#flex\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> flex</h1> <p><img src=\\\"/img/flex.png\\\" alt=\\\"flex\\\"></p> <ul><li><p>主轴是依靠 flex-direction 和 所有子元素在主轴方向上的 item-size 的总和确定的，flex-direction 这个属性可以控制子元素的排列方向和排列顺序。</p></li> <li><p>侧轴是依靠 flex-wrap 和 所有子元素在主轴方向上的 item-size 的总和确定的，flex-wrap 可以控制子元素 在侧轴方向上的排列方式以及顺序。</p></li></ul> <table><thead><tr><th>作用在 flex 容器上</th> <th>作用在 flex 子项上</th></tr></thead> <tbody><tr><td>flex-flow</td> <td>flex</td></tr> <tr><td>flex-direction</td> <td>flex-basis</td></tr> <tr><td>flex-wrap （单行/多行）</td> <td>flex-grow</td></tr> <tr><td>justify-content (分配主轴空间)</td> <td>flex-shrink</td></tr> <tr><td>align-items （分配侧轴空间）</td> <td>order</td></tr> <tr><td>align-content (单行弹性盒子无效)</td> <td>align-self</td></tr></tbody></table> <p>无论作用在 flex 容器上，还是作用在 flex 子项，都是控制的 flex 子项的呈现，只是前者控制的是整体，后者控制的是个体。</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}