{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/css/bfc.md?vue&type=template&id=2920071a&","dependencies":[{"path":"/Users/takki/blog/docs/css/bfc.md","mtime":1561016712325},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"bfc\\\"><a href=\\\"#bfc\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> BFC</h1> <blockquote><p>BFC 元素特性表现原则就是，内部子元素再怎么翻江倒海，翻云覆雨都不会影响外部的元素</p></blockquote> <p>块格式化上下文（Block Formatting Context，BFC)</p> <h2 id=\\\"如何创建-bfc\\\"><a href=\\\"#如何创建-bfc\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 如何创建 BFC</h2> <ul><li><strong>根元素</strong>或包含根元素的元素</li> <li>浮动元素（元素的 <strong>float</strong> 不是 none）</li> <li>绝对定位元素（元素的 <strong>position</strong> 为 absolute 或 fixed）</li> <li><strong>overflow</strong> 值不为 visible 的块元素</li> <li>弹性元素（display 为 <strong>flex</strong> 或 inline-flex 元素的直接子元素）</li> <li>网格元素（display 为 <strong>grid</strong> 或 inline-grid 元素的直接子元素）</li> <li>display 值为 <strong>flow-root</strong> 的元素</li> <li>多列容器（元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1）</li> <li>行内块元素（元素的 display 为 inline-block）</li> <li>contain 值为 layout、content 或 strict 的元素</li> <li>表格单元格（元素的 display 为 table-cell，HTML 表格单元格默认为该值）</li> <li>表格标题（元素的 display 为 table-caption，HTML 表格标题默认为该值）</li> <li>匿名表格单元格元素（元素的 display 为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）</li> <li>column-span 为 all 的元素始终会创建一个新的 BFC，即使该元素没有包裹在一个多列容器中。</li></ul> <h2 id=\\\"bfc-功能\\\"><a href=\\\"#bfc-功能\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> BFC 功能</h2> <ul><li>用 BFC 包住浮动元素</li></ul> <iframe width=\\\"100%\\\" height=\\\"300\\\" src=\\\"//jsfiddle.net/takkiTang/e56mro1g/8/embedded/result,html,css/\\\" allowfullscreen=\\\"allowfullscreen\\\" allowpaymentrequest frameborder=\\\"0\\\"></iframe> <ul><li>相邻 BFC 划清界限</li></ul> <iframe width=\\\"100%\\\" height=\\\"300\\\" src=\\\"//jsfiddle.net/takkiTang/e56mro1g/19/embedded/result,html,css/\\\" allowfullscreen=\\\"allowfullscreen\\\" allowpaymentrequest frameborder=\\\"0\\\"></iframe>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}