{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/browser/csrf.md?vue&type=template&id=424eeb5a&","dependencies":[{"path":"/Users/takki/blog/docs/browser/csrf.md","mtime":1549957748087},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"csrf-攻击\\\"><a href=\\\"#csrf-攻击\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> CSRF 攻击</h1> <p>CSRF 就是利用用户的登录态发起恶意请求</p> <h2 id=\\\"如何预防\\\"><a href=\\\"#如何预防\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 如何预防</h2> <p>防范 CSRF 可以遵循以下几种规则：</p> <ul><li>Get 请求不对数据进行修改</li> <li>不让第三方网站访问到用户 Cookie</li> <li>阻止第三方网站请求接口</li> <li>请求时附带验证信息，比如验证码或者 token</li></ul> <h3 id=\\\"samesite\\\"><a href=\\\"#samesite\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> SameSite</h3> <p>可以对 Cookie 设置 SameSite 属性。该属性设置 Cookie 不随着跨域请求发送，该属性可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。</p> <h3 id=\\\"验证-referer\\\"><a href=\\\"#验证-referer\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 验证 Referer</h3> <p>对于需要防范 CSRF 的请求，我们可以通过验证 Referer 来判断该请求是否为第三方网站发起的。</p> <h3 id=\\\"token\\\"><a href=\\\"#token\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Token</h3> <p>服务器下发一个随机 Token（算法不能复杂），每次发起请求时将 Token 携带上，服务器验证 Token 是否有效。</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}