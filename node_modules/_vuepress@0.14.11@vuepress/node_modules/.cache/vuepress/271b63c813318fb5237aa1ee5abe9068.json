{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/JavaScript/深拷贝.md?vue&type=template&id=9cb4c91c&","dependencies":[{"path":"/Users/takki/blog/docs/JavaScript/深拷贝.md","mtime":1563952593333},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"深拷贝、浅拷贝\"><a class=\"header-anchor\" href=\"#深拷贝、浅拷贝\" aria-hidden=\"true\">#</a> 深拷贝、浅拷贝</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>和原数据是否指向同一对象</th>\n<th>第一层数据为基本数据类型</th>\n<th>原数据中包含子对象</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>赋值</td>\n<td>是</td>\n<td>改变会使原数据一同改变</td>\n<td>改变会使原数据一同改变</td>\n</tr>\n<tr>\n<td>浅拷贝</td>\n<td>否</td>\n<td>改变不会使原数据一同改变</td>\n<td>改变会使原数据一同改变</td>\n</tr>\n<tr>\n<td>深拷贝</td>\n<td>否</td>\n<td>改变不会使原数据一同改变</td>\n<td>改变不会使原数据一同改变</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"浅拷贝\"><a class=\"header-anchor\" href=\"#浅拷贝\" aria-hidden=\"true\">#</a> 浅拷贝</h2>\n<ul>\n<li><code>for in</code></li>\n<li><code>Object.assign</code></li>\n<li>扩展运算符(...)</li>\n<li><code>Array.prototype.slice()</code></li>\n<li><code>Array.prototype.concat()</code></li>\n</ul>\n<h2 id=\"深拷贝\"><a class=\"header-anchor\" href=\"#深拷贝\" aria-hidden=\"true\">#</a> 深拷贝</h2>\n<p><code>JSON.parse(JSON.stringify(object))</code>的局限性</p>\n<ul>\n<li>会忽略 undefined</li>\n<li>会忽略 symbol</li>\n<li>不能序列化函数</li>\n<li>不能解决循环引用的对象</li>\n<li>原型链上的属性无法拷贝</li>\n<li>不能正确处理 Date</li>\n<li>不能处理 RegExp</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">deepClone</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">obj</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> obj\n    <span class=\"token keyword\">let</span> newObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">obj<span class=\"token punctuation\">.</span>constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">?</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> newObj\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}