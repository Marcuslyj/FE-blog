{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/browser/跨域.md?vue&type=template&id=6437de08&","dependencies":[{"path":"/Users/takki/blog/docs/browser/跨域.md","mtime":1569125002387},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"跨域\"><a class=\"header-anchor\" href=\"#跨域\" aria-hidden=\"true\">#</a> 跨域</h1>\n<ul>\n<li>同源策略限制、安全性考虑</li>\n<li><strong>域名，协议，端口</strong>不一致都是跨域行为</li>\n</ul>\n<h2 id=\"jsonp\"><a class=\"header-anchor\" href=\"#jsonp\" aria-hidden=\"true\">#</a> JSONP</h2>\n<p>JSONP 的原理很简单，就是利用 <code>&lt;script&gt;</code> 标签没有跨域限制的漏洞。通过 <code>&lt;script&gt;</code>标签指向一个需要访问的地址并提供一个回调函数来接收数据当需要通讯时。</p>\n<h2 id=\"cors\"><a class=\"header-anchor\" href=\"#cors\" aria-hidden=\"true\">#</a> CORS</h2>\n<p>跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器  让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。</p>\n<p>服务端设置 <code>Access-Control-Allow-Origin</code> 就可以开启 CORS。</p>\n</div>\n",null]}