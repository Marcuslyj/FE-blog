{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/Vue/自定义指令.md?vue&type=template&id=2ed95b56&","dependencies":[{"path":"/Users/takki/blog/docs/Vue/自定义指令.md","mtime":1570763242829},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"自定义指令\"><a class=\"header-anchor\" href=\"#自定义指令\" aria-hidden=\"true\">#</a> 自定义指令</h1>\n<h2 id=\"钩子函数\"><a class=\"header-anchor\" href=\"#钩子函数\" aria-hidden=\"true\">#</a> 钩子函数</h2>\n<ul>\n<li>\n<p><code>bind</code>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</p>\n</li>\n<li>\n<p><code>inserted</code>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p>\n</li>\n<li>\n<p><code>update</code>：所在组件的 VNode 更新时调用，<strong>但是可能发生在其子 VNode 更新之前</strong>。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。</p>\n</li>\n<li>\n<p><code>componentUpdated</code>：指令所在组件的 VNode 及<strong>其子 VNode</strong> 全部更新后调用。</p>\n</li>\n<li>\n<p><code>unbind</code>：只调用一次，指令与元素解绑时调用。</p>\n</li>\n</ul>\n<h2 id=\"钩子函数参数\"><a class=\"header-anchor\" href=\"#钩子函数参数\" aria-hidden=\"true\">#</a> 钩子函数参数</h2>\n<p>指令钩子函数会被传入以下参数：</p>\n<ul>\n<li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</li>\n<li><code>binding</code>：一个对象，包含以下属性：\n<ul>\n<li><code>name</code>：指令名，不包括 <code>v-</code> 前缀。</li>\n<li><code>value</code>：指令的绑定值，例如：v-my-directive=&quot;1 + 1&quot; 中，绑定值为 2。</li>\n<li><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。无论值是否改变都可用。</li>\n<li><code>expression</code>：字符串形式的指令表达式。例如 v-my-directive=&quot;1 + 1&quot; 中，表达式为 &quot;1 + 1&quot;。</li>\n<li><code>arg</code>：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 &quot;foo&quot;。</li>\n<li><code>modifiers</code>：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li>\n</ul>\n</li>\n<li><code>vnode</code>：Vue 编译生成的虚拟节点。</li>\n<li><code>oldVnode</code>：上一个虚拟节点，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。</li>\n</ul>\n</div>\n",null]}