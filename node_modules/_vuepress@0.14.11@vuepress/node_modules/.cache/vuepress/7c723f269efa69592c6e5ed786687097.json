{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/browser/csrf.md?vue&type=template&id=7cf0865c&","dependencies":[{"path":"/Users/takki/blog/docs/browser/csrf.md","mtime":1569126364391},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"csrf-攻击\"><a class=\"header-anchor\" href=\"#csrf-攻击\" aria-hidden=\"true\">#</a> CSRF 攻击</h1>\n<blockquote>\n<p>跨站请求伪造（英语：Cross-site request forgery)</p>\n</blockquote>\n<p>跨站请求伪造（CSRF）是一种冒充受信任用户，向服务器发送非预期请求的攻击方式。</p>\n<p><img src=\"/img/csrf.jpg\" alt=\"csrf\"></p>\n<h2 id=\"如何预防\"><a class=\"header-anchor\" href=\"#如何预防\" aria-hidden=\"true\">#</a> 如何预防</h2>\n<ul>\n<li>验证码</li>\n<li>Referer Check</li>\n<li>添加 token 验证</li>\n</ul>\n<h3 id=\"samesite\"><a class=\"header-anchor\" href=\"#samesite\" aria-hidden=\"true\">#</a> SameSite</h3>\n<p>可以对 Cookie 设置 SameSite 属性。该属性设置 Cookie 不随着跨域请求发送，该属性可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。</p>\n<h3 id=\"验证-referer\"><a class=\"header-anchor\" href=\"#验证-referer\" aria-hidden=\"true\">#</a> 验证 Referer</h3>\n<p>对于需要防范 CSRF 的请求，我们可以通过验证 Referer 来判断该请求是否为第三方网站发起的。</p>\n<h3 id=\"token\"><a class=\"header-anchor\" href=\"#token\" aria-hidden=\"true\">#</a> Token</h3>\n<p>服务器下发一个随机 Token（算法不能复杂），每次发起请求时将 Token 携带上，服务器验证 Token 是否有效。</p>\n</div>\n",null]}