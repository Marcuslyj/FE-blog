{"remainingRequest":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--1-0!/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??ref--1-1!/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/takki/blog/docs/browser/跨域.md?vue&type=template&id=6437de08&","dependencies":[{"path":"/Users/takki/blog/docs/browser/跨域.md","mtime":1569125002387},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/takki/blog/node_modules/_vuepress@0.14.11@vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"跨域\\\"><a href=\\\"#跨域\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 跨域</h1> <ul><li>同源策略限制、安全性考虑</li> <li><strong>域名，协议，端口</strong>不一致都是跨域行为</li></ul> <h2 id=\\\"jsonp\\\"><a href=\\\"#jsonp\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> JSONP</h2> <p>JSONP 的原理很简单，就是利用 <code>&lt;script&gt;</code> 标签没有跨域限制的漏洞。通过 <code>&lt;script&gt;</code>标签指向一个需要访问的地址并提供一个回调函数来接收数据当需要通讯时。</p> <h2 id=\\\"cors\\\"><a href=\\\"#cors\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> CORS</h2> <p>跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器  让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。</p> <p>服务端设置 <code>Access-Control-Allow-Origin</code> 就可以开启 CORS。</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}