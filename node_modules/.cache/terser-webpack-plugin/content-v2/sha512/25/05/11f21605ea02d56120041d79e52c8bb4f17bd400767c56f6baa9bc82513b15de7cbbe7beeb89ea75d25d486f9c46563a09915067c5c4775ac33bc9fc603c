{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{205:function(t,r,e){\"use strict\";e.r(r);var s=e(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,r=t.$createElement,e=t._self._c||r;return e(\"div\",{staticClass:\"content\"},[e(\"h1\",{attrs:{id:\"跨域\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跨域\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 跨域\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"同源策略限制、安全性考虑\")]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"域名，协议，端口\")]),t._v(\"不一致都是跨域行为\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"jsonp\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jsonp\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" JSONP\")]),t._v(\" \"),e(\"p\",[t._v(\"JSONP 的原理很简单，就是利用 \"),e(\"code\",[t._v(\"<script>\")]),t._v(\" 标签没有跨域限制的漏洞。通过 \"),e(\"code\",[t._v(\"<script>\")]),t._v(\"标签指向一个需要访问的地址并提供一个回调函数来接收数据当需要通讯时。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"cors\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cors\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" CORS\")]),t._v(\" \"),e(\"p\",[t._v(\"跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器  让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。\")]),t._v(\" \"),e(\"p\",[t._v(\"服务端设置 \"),e(\"code\",[t._v(\"Access-Control-Allow-Origin\")]),t._v(\" 就可以开启 CORS。\")])])}],!1,null,null,null);r.default=a.exports}}]);","extractedComments":[]}