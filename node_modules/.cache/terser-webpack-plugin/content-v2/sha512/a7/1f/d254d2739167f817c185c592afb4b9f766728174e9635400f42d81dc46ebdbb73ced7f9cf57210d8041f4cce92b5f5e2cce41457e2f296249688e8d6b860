{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{196:function(t,s,a){\"use strict\";a.r(s);var e=a(0),i=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"路由原理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#路由原理\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 路由原理\")]),t._v(\" \"),a(\"p\",[t._v(\"前端路由实现起来其实很简单，本质就是监听 URL 的变化，然后匹配路由规则，显示相应的页面，并且无须刷新。目前单页面使用的路由就只有两种实现方式\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"hash 模式\")]),t._v(\" \"),a(\"li\",[t._v(\"history 模式\")])]),t._v(\" \"),a(\"p\",[t._v(\"www.test.com/##/ 就是 Hash URL，当 ## 后面的哈希值发生变化时，不会向服务器请求数据，可以通过 hashchange 事件来监听到 URL 的变化，从而进行跳转页面。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/img/hash.png\",alt:\"'hash'\"}})]),t._v(\" \"),a(\"p\",[t._v(\"History 模式是 HTML5 新推出的功能，比之 Hash URL 更加美观\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/img/history.png\",alt:\"'history'\"}})])])}],!1,null,null,null);s.default=i.exports}}]);","extractedComments":[]}